library(DiffBind)
samples=read.csv('subEZH2.txt',sep='\t')
dbObj =dba(sampleSheet = samples)
save(dbObj,file="subEZH2original.data")
dbObj <- dba.count(dbObj, bUseSummarizeOverlaps=TRUE)
save(dbObj,file="subEZH2count.data")
load('subEZH2count.data')


#------------------------------所有样本做PCA--过滤后
dba.plotPCA(dbObj,  attributes=DBA_CONDITION, label=DBA_ID,vColors=c("#8ECFC9", "#82B0D2", "#FA7F6F", "#FFBE7A","#BEB8DC","#E7DAD2"),dotSize=2,labelSize=0.7)
plot(dbObj)

info <- dba.show(dbObj)
libsizes <- cbind(LibReads=info$Reads, FRiP=info$FRiP,PeakReads=round(info$Reads*info$FRiP))
rownames(libsizes) <- info$ID
libsizes
save(libsizes,file="libsizes.data")

dbObj <- dba.normalize(dbObj,normalize=DBA_NORM_LIB)
norm <- dba.normalize(h3k27, bRetrieve=TRUE)

normlibs <- cbind(FullLibSize=norm$lib.sizes, 
                  NormFacs=norm$norm.factors, 
                  NormLibSize=round(norm$lib.sizes/norm$norm.factors))
rownames(normlibs) <- info$ID
normlibs
save(norm,file="norm.data")
save(normlibs,file="normlibs.data")
save(h3k27,file="h3k27normlized.data")

#overlap between one group
dba.plotVenn(dbObj,dbObj$masks$`0`)

#diff
dbObj_diff1 <- dba.contrast(dbObj, group1=dbObj$masks$`0`,group2 = dbObj$masks$`1`,name1='PT55D' ,name2='0D',minMembers = 2)
dbObj_diff1 <- dba.analyze(dbObj_diff1,method=DBA_ALL_METHODS)
dba.show(dbObj_diff1, bContrasts=TRUE)
#
dbObj_diff2 <- dba.contrast(dbObj, group1=dbObj$masks$`0`,group2 = dbObj$masks$`3`,name1='PT55D' ,name2='30D',minMembers = 2)
dbObj_diff2 <- dba.analyze(dbObj_diff2,method=DBA_ALL_METHODS)
dba.show(dbObj_diff2, bContrasts=TRUE)
#  summary of results
dba.show(dbObj, bContrasts=T)

#  overlapping peaks identified by the two different tools (DESeq2 and edgeR)
dba.plotVenn(dbObj_diff1,contrast=1,method=DBA_ALL_METHODS)
dba.plotMA(dbObj_diff1,contrast=1)
dba.plotVolcano(dbObj_diff1,contrast=1)



comp1.edgeR <- dba.report(dbObj_diff2, method=DBA_EDGER, contrast = 1, th=1)
comp1.deseq <- dba.report(dbObj_diff2, method=DBA_DESEQ2, contrast = 1, th=1)
# EdgeR
out <- as.data.frame(comp1.edgeR)
write.table(out, file="PT55D_vs_30D_edgeR.txt", sep="\t", quote=F, col.names = NA)
# DESeq2
out1 <- as.data.frame(comp1.deseq)
write.table(out1, file="PT55D_vs_30D_deseq2.txt", sep="\t", quote=F, col.names = NA)

# Create bed files for each keeping only significant peaks (p < 0.05)
# EdgeR
out3 <- as.data.frame(comp1.edgeR)
edge.bed <- out3[ which(out$FDR < 0.05), 
                  c("seqnames", "start", "end", "strand", "Fold")]
write.table(edge.bed, file="PT55D_vs_30D_edgeR_sig.bed", sep="\t", quote=F, row.names=F, col.names=F)

# DESeq2
out4 <- as.data.frame(comp1.deseq)
deseq.bed <- out4[ which(out$FDR < 0.05), 
                   c("seqnames", "start", "end", "strand", "Fold")]
write.table(deseq.bed, file="PT55D_vs_30D_deseq2_sig.bed", sep="\t", quote=F, row.names=F, col.names=F)
